#
# Description
# -----------
# This table stores the base atdo information.  
#
# Fields
# -------
# id:				The id of the atdo.
# uuid:				The Universal Unique ID.
# business_id:		The business the atdo is attached to.
#
# parent_id:		The parent_id of the atdo, allows for nested appointments and tasks.
#					Currently only Projects are allowed to have sub-items, which may not be another Project.
#
# project_id:		The ID of the project the atdo is attached to in the ciniki.projects module.
#
# type:				The type of atdo:
#
#					0 - unknown
#					1 - Appointment
#					2 - Task
#					3 - Document (future)
#					4 - FAQ
#					5 - Note
#					6 - Message
#
# category:			The category for the atdo.
# 
# status:			The current status of the atdo.
#					
#					0 - unknown
#					1 - Open
#					60 - Closed/Completed
#
# priority:			0 - unknown	 (used for tasks)
#					10 - low
#					20 - 
#					30 - medium
#					40 -
#					50 - high
#
# perm_flags:		0x01 - private to user who created and assigned users
#					0x02 - 
#					0x03 -
#					0x04 -
#
# user_id:			The user who created the task
#
# subject:			The atdo subject/title.  Detailed information should be in the followup.
# location:			The location of the atdo, typically the location for an appointment.
# content:			Any content which is not in the followup format.
#
# appointment_date:		The UTC date/time when the atdo is scheduled for.  This is used in calendar display.
# appointment_duration:	How long the atdo should take, in minutes, used for displaying in the calendar.
# appointment_flags:	0x01 - all day appointment
# 
# appointment_repeat_type:      0 - no repeat		(future)
#            			       10 - daily, repeat every x days
#			                   20 - weekly, same day every x weeks
#          			           30 - monthly, day of month
#                 			   31 - monthly, day of week (first sunday)
#			                   50 - yearly
#
# appointment_repeat_interval:  The interval to repeat the appointment, (default 1)
# appointment_repeat_end:       The date and time to stop the repeatable appointment on#
#
# due_date:			The UTC date and time the atdo is due to be finished.  The due date may be after,
#					the start_date + duration.  It allows the user to alter when they want to schedule
#					the atdo without interfering with the date it's due.
#
# due_duration:		How long the appointment should be for the due_date.
# due_flags:		0x01 - all date due date
#
# date_added:       The UTC date and time the thread was added.
# last_updated:     The UTC date and time the thread was last updated.
#
create table ciniki_atdos (
    id int not null auto_increment,
	uuid char(36) not null,
    business_id int not null,
	parent_id int not null,
	project_id int not null,
	type tinyint unsigned not null,
	category varchar(140) not null,
    status tinyint unsigned not null,
    priority tinyint unsigned not null,
	perm_flags tinyint unsigned not null,
    user_id int not null,
    subject varchar(140) not null,
	location varchar(250) not null,
	content varchar(50000) not null,
	appointment_date datetime not null,
	appointment_duration int not null,
	appointment_flags tinyint unsigned not null,
	appointment_repeat_type tinyint unsigned not null,
	appointment_repeat_interval int not null,
	appointment_repeat_end datetime not null,
	due_date datetime not null,
	due_duration int not null,
	due_flags tinyint unsigned not null,
    date_added datetime not null,
    last_updated datetime not null,
    primary key (id),
	index (type),
	index (category),
    index (parent_id, business_id, status, priority, date_added),
	index (business_id, uuid, last_updated)
) ENGINE='InnoDB', COMMENT='v1.04';
